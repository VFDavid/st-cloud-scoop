{
  "permissions": {
    "allow": [
      "Bash(npx create-next-app:*)",
      "Bash(npm install)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(find:*)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(taskkill:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Read(//c/**)",
      "WebFetch(domain:stc-scoop.vercel.app)",
      "WebFetch(domain:st-cloud-scoop.vercel.app)",
      "Bash(npm uninstall:*)",
      "Bash(git tag:*)",
      "WebFetch(domain:www.visitstcloud.com)",
      "Bash(git checkout:*)",
      "Bash(dir:*)",
      "Bash(npx:*)",
      "WebSearch",
      "Bash(npm search:*)",
      "Bash(vercel env:*)",
      "WebFetch(domain:vercel.com)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel-mcp)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx -y vercel-mcp --help)",
      "Bash(POSTGRES_CONNECTION_STRING=\"postgresql://postgres.zvyzhmhsubazkvcsxbjs:StoringData247!@aws-0-us-west-1.pooler.supabase.com:6543/postgres\" npx -y @modelcontextprotocol/server-postgres)",
      "Bash(run/doctor:*)",
      "mcp__postgres__query",
      "mcp__vercel__getDeployments",
      "mcp__memory__read_graph",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel env add NEXTAUTH_URL production)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel env add NEXTAUTH_URL production --token=b2rRlFmL9kPxMPl6ZA7pgGDX)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx -y vercel-mcp)",
      "mcp__vercel__getDeployment",
      "mcp__vercel__getDeploymentEvents",
      "Bash(set CRON_SECRET=your_cron_secret_here)",
      "Bash(git reset:*)",
      "Bash(git pull:*)",
      "Bash(timeout 60 curl -X POST -H \"Content-Type: application/json\" -v https://st-cloud-scoop.vercel.app/api/debug/activate-articles)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel env add HTML_CSS_TO_IMAGE_API_KEY production --token=b2rRlFmL9kPxMPl6ZA7pgGDX)",
      "Bash(timeout 60 curl -X GET \"https://st-cloud-scoop.vercel.app/api/debug/test-weather\" -H \"Content-Type: application/json\" -v)",
      "Bash(timeout 60 curl -X GET \"https://st-cloud-scoop.vercel.app/api/debug/test-weather\" -H \"Content-Type: application/json\")",
      "Bash(timeout:*)",
      "WebFetch(domain:hcti.io)",
      "Bash(node:*)",
      "Bash(git fetch:*)",
      "Bash(grep:*)",
      "WebFetch(domain:developers.mailerlite.com)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel env add GOOGLE_CLOUD_PROJECT_ID production --token=b2rRlFmL9kPxMPl6ZA7pgGDX)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel projects list --token=b2rRlFmL9kPxMPl6ZA7pgGDX)",
      "Bash(set VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX npx vercel env list --token=b2rRlFmL9kPxMPl6ZA7pgGDX)",
      "mcp__ide__executeCode",
      "WebFetch(domain:www.tomsguide.com)",
      "Bash(python:*)",
      "Bash(mcp__vercel__getDeployments:*)",
      "WebFetch(domain:coscgis.maps.arcgis.com)",
      "WebFetch(domain:gis.co.stearns.mn.us)",
      "Bash(cat:*)",
      "Bash(git stash:*)",
      "Bash(git restore:*)",
      "Bash(set STRIPE_API_KEY=your_key_here)",
      "Bash(ls:*)",
      "WebFetch(domain:www.mailerlite.com)",
      "Bash(git log:*)",
      "Bash(awk:*)",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX curl -s \"https://api.vercel.com/v6/deployments?projectId=prj_u3PF6VNbjgxaOv5mO5xxvCHUfAao&limit=1\" -H \"Authorization: Bearer b2rRlFmL9kPxMPl6ZA7pgGDX\")",
      "Bash(VERCEL_API_KEY=b2rRlFmL9kPxMPl6ZA7pgGDX curl -s \"https://api.vercel.com/v6/deployments?limit=3\" -H \"Authorization: Bearer b2rRlFmL9kPxMPl6ZA7pgGDX\")",
      "Bash(while read file)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(git cherry-pick:*)",
      "Bash(wsl:*)",
      "Bash(git remote get-url:*)",
      "Bash(git remote set-url:*)",
      "Bash(do if ! grep -q \"import.*NextRequest\" \"$file\")",
      "Bash(then echo \"$file\" fi done)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase",
    "vercel"
  ]
}
